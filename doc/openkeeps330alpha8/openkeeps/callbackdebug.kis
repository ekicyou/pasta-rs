#==============================================================================
#
# 「華和梨」Phase 8.x用コマンドライン コールバックデバッグ用辞書
# 華和梨添付マニュアル内tips.htmlより一部改変
#
# ＊本ファイルの再配布について：
#   このファイルについては、華和梨添付のサンプルスクリプト・辞書と同様に扱う
#   こととする。すなわち、改変の有無に関わらず、自由に使用、再配布できる。
#   このとき、暗号化解除やライセンス表示は必要ない。
#   [ 2004/10/30 さとー(sato-@users.sourceforge.jp) ]
#
# 2004.10.30    華和梨 Phase 8.2.0のマニュアルからコピー・改変
#
#==============================================================================

=kis
# debugOnGET…GETのデバッグ
#
# 第1引数: イベント名、リソース名
# 第2引数以降: Reference[x]
function debugOnGET $(
	# IDがなければ終了
	if $[ $(size @arg) < 2 ] $(return);

	# ヘッダのお掃除
	cleartree System.Request;

	# ヘッダセット
	setstr System.Request GET;
	setstr System.Request.ID $@arg[1];

	clear @arg[0];
	setstr @arg[0] OnGET;
	xargs @arg debugCallback;
);

# debugOnNOTIFY…NOTIFYのデバッグ
#
# 第1引数: notifyされた情報名
# 第2引数以降: Reference[x]
function debugOnNOTIFY $(
	# IDがなければ終了
	if $[ $(size @arg) < 2 ] $(return);

	# ヘッダのお掃除
	cleartree System.Request;

	# ヘッダセット
	setstr System.Request NOTIFY;
	setstr System.Request.ID $@arg[1];

	clear @arg[0];
	setstr @arg[0] OnNOTIFY;
	xargs @arg debugCallback;
);

# debugCallback…コールバックエントリデバッグ用共通関数
#
# 第1引数: コールバックエントリ(OnGET、OnNOTIFY)
# 第2引数以降: Reference[x]
# 備考: リクエストヘッダはこの関数を呼ぶ前にセットすること
function debugCallback $(
	# IDがなければ終了
	if $[ $(size @arg) < 2 ] $(return);

	# ヘッダのお掃除
	cleartree System.Response;

	# 共通ヘッダセッド
	setstr System.Request.Sender Kosui;
	setstr System.Request.SecurityLevel local;
	setstr System.Request.Charset Shift_JIS;
	setstr @pos 2;
	loop $[ $(size @arg)-2 ] $(
		setstr System.Request.Reference$[${@pos}-2] $@arg[${@pos}];
		inc @pos;
	);

	# クエリー開始宣言
	logprint "[SHIORI/SAORI Emulator] Query sequence begin.";

	# リクエストの表示
	printRequestHeaders;

	# コールバック
	if $(size System.Callback.$@arg[1]) $(
		setstr @Value $(get System.Callback.$@arg[1]);
		if $(length ${@Value}) $(
			setstr System.Response.Value ${@Value};
			setstr CallbackDebug.Value ${@Value};
		) else $(
			if $(size CallbackDebug.Value) $(clear CallbackDebug.Value);
		);
	);

	# 応答の表示
	printResponseHeaders;

	# クエリー終了宣言
	logprint "[SHIORI/SAORI Emulator] Query sequence end.";

	#ヘッダの後片付け
	cleartree System.Request;
	cleartree System.Response;
);

# リクエストヘッダの表示
function printRequestHeaders $(
	logprint "---------------------- REQUEST";
	logprint ${System.Request} "SHIORI/3.0";

	listtree @Headers System.Request;
	if $(size @Headers) $(
		foreach @h @Headers $(
			if $[ ${@h} != "System.Request" ] $(
				logprint $(substr ${@h} 15)":" ${${@h}};
			);
		);
	);
	logprint;
);

# 応答ヘッダの表示
function printResponseHeaders $(
	logprint "---------------------- RESPONSE";
	if $(length ${System.Response.Value}) $(
		logprint "SHIORI/3.0 200 OK";
	) else $(
		logprint "SHIORI/3.0 204 No Content";
	);

	listtree @Headers System.Response;
	if $(size @Headers) $(
		foreach @h @Headers $(
			if $[ ${@h} != "System.Response" ] $(
				logprint $(substr ${@h} 16)":" ${${@h}};
			);
		);
	);
	logprint;
);
=end
