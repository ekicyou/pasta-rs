#########################################################################
# Ｇｈｏｓｔ「．さくら」
# 汎用スクリプト
#########################################################################
# 改行制御：初回のみ改行せず、後は改行する制御
#----------------------------------------------------------------------
# 初期化
hCnt : 0
uCnt : 0
wCnt : 0
hCls : 0
uCls : 0
# は通常の初期化、${i2}は触りタイマーをクリアしない
i  : ${会話停止}$(set uCnt 0;set hCnt 0;set wCnt 0;set hCls 0;set uCls 0)
i2 :            $(set uCnt 0;set hCnt 0;set wCnt 0;set hCls 0;set uCls 0)


# 待ち無し
q : $(set wCnt 0)

# 改行無し
hi : $(set hCnt 0)
ui : $(set uCnt 0)

# 次の改行でビットマップクリアを指示
hc : $(set hCls 1)
uc : $(set uCls 1)

# ビットマップクリアスクリプト
hClear : $(if $([ ${hCls} == "1" ]) ${hBitMapClear} $(NULL) )
uClear : $(if $([ ${uCls} == "1" ]) ${uBitMapClear} $(NULL) )
hBitMapClear : ${BitMapClear}$(set hCls 0;set hCnt 0)
uBitMapClear : ${BitMapClear}$(set uCls 0;set uCnt 0)
BitMapClear : "\_b[del.png,40,42]"\c

# wait制御（初回の会話以外はウエイト入れる）
wait : $(inc wCnt)$(if $([ ${wCnt} == "1" ]) $(NULL) "\w8\w8" )

# 1.5行改行
h : ${wait}\0${hClear}$(inc hCnt)$(if $([ ${hCnt} == "1" ]) $(NULL) "\n\n[half]" )
u : ${wait}\1${uClear}$(inc uCnt)$(if $([ ${uCnt} == "1" ]) $(NULL) "\n\n[half]" )

# １行改行
hn1 : ${wait}\0${hClear}$(inc hCnt)$(if $([ ${hCnt} == "1" ]) $(NULL) "\n" )
un1 : ${wait}\1${uClear}$(inc uCnt)$(if $([ ${uCnt} == "1" ]) $(NULL) "\n" )

# さくら、表情付き
h0  : ${h}$(set sfNum "00")${ChangeSurface}
h1  : ${h}$(set sfNum "01")${ChangeSurface}
h2  : ${h}$(set sfNum "02")${ChangeSurface}
h3  : ${h}$(set sfNum "03")${ChangeSurface}
h4  : ${h}$(set sfNum "04")${ChangeSurface}
h5  : ${h}$(set sfNum "05")${ChangeSurface}
h6  : ${h}$(set sfNum "06")${ChangeSurface}
h7  : ${h}$(set sfNum "07")${ChangeSurface}
h8  : ${h}$(set sfNum "08")${ChangeSurface}
h20 : ${h}\s[20]
h22 : ${h}\s[22]

hq   : ${q}${h}
hq0  : ${q}${h0}
hq1  : ${q}${h1}
hq2  : ${q}${h2}
hq3  : ${q}${h3}
hq4  : ${q}${h4}
hq5  : ${q}${h5}
hq6  : ${q}${h6}
hq7  : ${q}${h7}
hq8  : ${q}${h8}
hq20 : ${q}${h20}
hq22 : ${q}${h22}

hi0  : ${q}${hi}${h0}
hi1  : ${q}${hi}${h1}
hi2  : ${q}${hi}${h2}
hi3  : ${q}${hi}${h3}
hi4  : ${q}${hi}${h4}
hi5  : ${q}${hi}${h5}
hi6  : ${q}${hi}${h6}
hi7  : ${q}${hi}${h7}
hi8  : ${q}${hi}${h8}
hi20 : ${q}${hi}${h20}
hi22 : ${q}${hi}${h22}





# うにゅう、表情付き
u0 :${u}$(set sfNum "10")${ChangeSurface}
u1 :${u}$(set sfNum "11")${ChangeSurface}
u2 :${u}\s[12]

uq  :${q}${u1}
uq0 :${q}${u0}
uq1 :${q}${u1}
uq2 :${q}${u2}

ui0 :${q}${hi}${u0}
ui1 :${q}${hi}${u1}
ui2 :${q}${hi}${u2}


# 日付によるサーフェスの切り替え
ChangeSurface : ${ChangeSurface1}
ChangeSurface1 : $(set kp.entryname "sf."${sfNum}".""D"$(date %m%d) ; if ${CallEntryCheck} $(entry ${kp.entryname}) ${ChangeSurface2};)
ChangeSurface2 : $(set kp.entryname "sf."${sfNum}                   ; if ${CallEntryCheck} $(entry ${kp.entryname})                  ;)

# 通常サーフェスセット
sf.00 : \s[0]
sf.01 : \s[1]
sf.02 : \s[2]
sf.03 : \s[3]
sf.04 : \s[4]
sf.05 : \s[5]
sf.06 : \s[6]
sf.07 : \s[7]
sf.08 : \s[8]
sf.10 : \s[10]
sf.11 : \s[11]

# クリスマスサーフェスセット
sf.00.D1224 : \s[300]
sf.01.D1224 : \s[301]
sf.02.D1224 : \s[302]
sf.03.D1224 : \s[303]
sf.04.D1224 : \s[304]
sf.05.D1224 : \s[305]
sf.06.D1224 : \s[306]
sf.07.D1224 : \s[307]
sf.08.D1224 : \s[308]
sf.10.D1224 : \s[310]
sf.11.D1224 : \s[311]

sf.00.D1225 : \s[300]
sf.01.D1225 : \s[301]
sf.02.D1225 : \s[302]
sf.03.D1225 : \s[303]
sf.04.D1225 : \s[304]
sf.05.D1225 : \s[305]
sf.06.D1225 : \s[306]
sf.07.D1225 : \s[307]
sf.08.D1225 : \s[308]
sf.10.D1225 : \s[310]
sf.11.D1225 : \s[311]


#-----------------------------------------------------------------------------
# 全てのネタはここから始まる。
sentence : ${会話停止}${ネタ種別}${たまに呼掛け}

# 一般ネタ:90%
# 季節ネタ: 5%
# 解説もの: 5%  とりあえずこんなところで

ネタ種別 : ${ネタ}
ネタ種別 : ${ネタ}
ネタ種別 : ${ネタ}
ネタ種別 : ${ネタ}
ネタ種別 : ${ネタ発生確率２０％}
ネタ発生確率２０％ : ${ネタ}
ネタ発生確率２０％ : ${ネタ}
ネタ発生確率２０％ : ${季節ネタ}
ネタ発生確率２０％ : ${紹介ネタ}

さくら呼び掛け系 : ${ネタ種別}
さくら呼び掛け系 : ${たまに呼掛け}
さくら呼び掛け系 : ${会話停止}

たまに呼掛け : $(NULL),$(NULL),$(NULL),$(NULL),$(NULL)
たまに呼掛け : $(NULL),$(NULL),$(NULL),$(NULL),${会話呼掛け}

会話呼掛け : $(if $([ ${system.communicate} == "stop" ]) $(set system.communicate ${system.OtherGhost}) )

#-----------------------------------------------------------------------------
# 会話に関するスクリプト
c : ${会話たまに停止}
会話たまに停止 : ${会話返答}
会話たまに停止 : ${会話返答}
会話たまに停止 : ${会話返答}
会話たまに停止 : ${会話返答}
会話たまに停止 : ${会話停止}

会話停止 : $(set system.communicate "stop")
会話返答 : $(set  system.communicate ${system.Sender})\w8

#-----------------------------------------------------------------------------
# 人物が複数登場するとき
人名１ : 0
人名２ : 0
人名３ : 0
人名４ : 0
人名５ : 0
人名６ : 0
対決メンバー : 0
２人で一番強い人 : 0
３人で一番強い人 : 0
６人の内誰か : $(? ${人名１} ${人名２} ${人名３} ${人名４} ${人名５} ${人名６})

人名セット : ${人名１セット}${人名２セット}${人名３セット}${２人で最強の人セット}${３人で最強の人セット}
人名１セット : $(set 人名１ ${人名})
人名２セット : $(set 人名２ ${人名}; while $([ ${人名１} == ${人名２} ]) $(set 人名２ ${人名}))
人名３セット : $(set 人名３ ${人名}; while $([[ ${人名１} == ${人名３} ] | [ ${人名２} == ${人名３} ]]) $(set 人物３ ${人物}))
２人で最強の人セット : $(set 対決メンバー ${人名１}; adddict 対決メンバー ${人名２}; set ２人で一番強い人 ${対決メンバー})
３人で最強の人セット : $(set 対決メンバー ${人名１}; adddict 対決メンバー ${人名２}; adddict 対決メンバー ${人名３}; set ３人で一番強い人 ${対決メンバー})

６名セット : ${人名セット}${人名４セット}${人名５セット}${人名６セット}
人名４セット : $(set 人名４ ${人名}; while $([[[ ${人名１} == ${人名４} ] | [ ${人名２} == ${人名４} ]] | [ ${人名３} == ${人名４} ]]) $(set 人物４ ${人物}))
人名５セット : $(set 人名５ ${人名}; while $([[[ ${人名１} == ${人名５} ] | [ ${人名２} == ${人名５} ]] | [[ ${人名３} == ${人名５} ] | [ ${人名４} == ${人名５} ]]]) $(set 人物５ ${人物}))
人名６セット : $(set 人名６ ${人名}; while $([[[[ ${人名１} == ${人名６} ] | [ ${人名２} == ${人名６} ]] | [[ ${人名３} == ${人名６} ] | [ ${人名４} == ${人名６} ]]] | [ ${人名５} == ${人名６} ]]) $(set 人物６ ${人物}))

#-----------------------------------------------------------------------------
# 一般名詞をセット
一般名詞１ : 0
一般名詞セット   : ${一般名詞１セット}
一般名詞１セット : $(set 一般名詞１  ${一般名詞})

#-----------------------------------------------------------------------------
# 指定したエントリから引用した単語を表示して記憶（使いまわし用）
エントリ : 0
単語１ : 0
単語２ : 0
単語３ : 0
単語４ : 0
引用単語 : 0

引用１ : ${引用処理}$(set 単語１ ${引用単語})${単語１}
引用２ : ${引用処理}$(set 単語２ ${引用単語})${単語２}
引用３ : ${引用処理}$(set 単語３ ${引用単語})${単語３}
引用４ : ${引用処理}$(set 単語４ ${引用単語})${単語４}

記憶１ : ${引用処理}$(set 単語１ ${引用単語})
記憶２ : ${引用処理}$(set 単語２ ${引用単語})
記憶３ : ${引用処理}$(set 単語３ ${引用単語})
記憶４ : ${引用処理}$(set 単語４ ${引用単語})

引用処理 : $(set 引用単語 ${${エントリ}})

#-----------------------------------------------------------------------------
# グロンギ語（使うな、こんなもんっ！！）
# 元単語:変換元の文字列
# tmp1:変換中の文字のインデックス tmp2:文字列長 tmp3:元文字 tmp4:変換後 tmp5:前の変換文字

#長音　　　　→　前の音を重ねる
#促音　　　　→　後の音を重ねる
#拗音　　　　→　そのまま
#助詞　の　　→　ン
#助詞　が　　→　グ
#助詞　は　　→　パ

グロンギ語 : $(set tmp1 1; set tmp2 $(expr length ${元単語}); set tmp5 $(NULL))$(while $([ ${tmp1} -le ${tmp2} ]) ${グロンギ語.単語変換} )
グロンギ語.単語変換 : $(set tmp3 $(expr substr ${元単語} ${tmp1} 1); set tmp4 ${グロンギ.${tmp3}}; if $([ ${tmp4} == $(NULL) ]) $(set tmp4 ${tmp3}); set tmp5 ${tmp4}; inc tmp1)${tmp4}

グロンギ.ー : ${tmp5}
グロンギ.っ : ${tmp5}
グロンギ.ッ : ${tmp5}
グロンギ.ゃ : ャ
グロンギ.ゅ : ュ
グロンギ.ょ : ョ

グロンギ.あ : ガ
グロンギ.い : ギ
グロンギ.う : グ
グロンギ.え : ゲ
グロンギ.お : ゴ
グロンギ.か : バ
グロンギ.き : ビ
グロンギ.く : ブ
グロンギ.け : ベ
グロンギ.こ : ボ
グロンギ.さ : ガ
グロンギ.し : ギ
グロンギ.す : グ
グロンギ.せ : ゲ
グロンギ.そ : ゴ
グロンギ.た : ダ
グロンギ.ち : ヂ
グロンギ.つ : ヅ
グロンギ.て : デ
グロンギ.と : ド
グロンギ.な : バ
グロンギ.に : ビ
グロンギ.ぬ : ブ
グロンギ.ね : ベ
グロンギ.の : ボ
グロンギ.は : ザ
グロンギ.ひ : ジ
グロンギ.ふ : ズ
グロンギ.へ : ゼ
グロンギ.ほ : ゾ
グロンギ.ま : ラ
グロンギ.み : リ
グロンギ.む : ル
グロンギ.め : レ
グロンギ.も : ロ
グロンギ.や : ジャ
グロンギ.ゆ : ジュ
グロンギ.よ : ジョ
グロンギ.ら : サ
グロンギ.り : シ
グロンギ.る : ス
グロンギ.れ : セ
グロンギ.ろ : ソ
グロンギ.わ : パ
グロンギ.を : ゾ
グロンギ.ん : ン
グロンギ.が : ガ
グロンギ.ぎ : ギ
グロンギ.ぐ : グ
グロンギ.げ : ゲ
グロンギ.ご : ゴ
グロンギ.ざ : ザ
グロンギ.じ : ジ
グロンギ.ず : ズ
グロンギ.ぜ : ゼ
グロンギ.ぞ : ゾ
グロンギ.だ : ザ
グロンギ.ぢ : ジ
グロンギ.づ : ズ
グロンギ.で : ゼ
グロンギ.ど : ゾ
グロンギ.ば : ダ
グロンギ.び : ヂ
グロンギ.ぶ : ヅ
グロンギ.べ : デ
グロンギ.ぼ : ド
グロンギ.ぱ : マ
グロンギ.ぴ : ミ
グロンギ.ぷ : ム
グロンギ.ぺ : メ
グロンギ.ぽ : モ

グロンギ.ア : ガ
グロンギ.イ : ギ
グロンギ.ウ : グ
グロンギ.エ : ゲ
グロンギ.オ : ゴ
グロンギ.カ : バ
グロンギ.キ : ビ
グロンギ.ク : ブ
グロンギ.ケ : ベ
グロンギ.コ : ボ
グロンギ.サ : ガ
グロンギ.シ : ギ
グロンギ.ス : グ
グロンギ.セ : ゲ
グロンギ.ソ : ゴ
グロンギ.タ : ダ
グロンギ.チ : ヂ
グロンギ.ツ : ヅ
グロンギ.テ : デ
グロンギ.ト : ド
グロンギ.ナ : バ
グロンギ.ニ : ビ
グロンギ.ヌ : ブ
グロンギ.ネ : ベ
グロンギ.ノ : ボ
グロンギ.ハ : ザ
グロンギ.ヒ : ジ
グロンギ.フ : ズ
グロンギ.ヘ : ゼ
グロンギ.ホ : ゾ
グロンギ.マ : ラ
グロンギ.ミ : リ
グロンギ.ム : ル
グロンギ.メ : レ
グロンギ.モ : ロ
グロンギ.ヤ : ジャ
グロンギ.ユ : ジュ
グロンギ.ヨ : ジョ
グロンギ.ラ : サ
グロンギ.リ : シ
グロンギ.ル : ス
グロンギ.レ : セ
グロンギ.ロ : ソ
グロンギ.ワ : パ
グロンギ.ヲ : ゾ
グロンギ.ン : ン
グロンギ.ガ : ガ
グロンギ.ギ : ギ
グロンギ.グ : グ
グロンギ.ゲ : ゲ
グロンギ.ゴ : ゴ
グロンギ.ザ : ザ
グロンギ.ジ : ジ
グロンギ.ズ : ズ
グロンギ.ゼ : ゼ
グロンギ.ゾ : ゾ
グロンギ.ダ : ザ
グロンギ.ヂ : ジ
グロンギ.ヅ : ズ
グロンギ.デ : ゼ
グロンギ.ド : ゾ
グロンギ.バ : ダ
グロンギ.ビ : ヂ
グロンギ.ブ : ヅ
グロンギ.ベ : デ
グロンギ.ボ : ド
グロンギ.パ : マ
グロンギ.ピ : ミ
グロンギ.プ : ム
グロンギ.ペ : メ
グロンギ.ポ : モ

#-----------------------------------------------------------------------------
# 指定タグの文章を取得
取得文章 : 0
文章タグ : 0
文章取得 : $(set 取得文章 ${${文章タグ}})


#-----------------------------------------------------------------------------
# ミミタコ反応
今回会話 : ""
前の会話１ : ""
前の会話２ : ""
前の会話３ : ""

system.OnResponse   : $(if $([ ${system.Age}  -lt 2 ]) ${ミミタコクリア} ${ミミタコチェック})
今回会話セット      : $(set temp0 $(expr index ${system.Sentence} ""); dec temp0 1; set 今回会話 $(expr substr ${system.Sentence} 1 ${temp0}) )
ミミタコクリア      : ${今回会話セット}$(set 前の会話３ $(NULL); set 前の会話２ $(NULL); set 前の会話１ ${今回会話})
ミミタコチェック    : ${今回会話セット}$(if $([ ${前の会話１} == ${今回会話} ]) ${ミミタコ反応} ${ミミタコチェック２})
ミミタコチェック２  : $(if $([ ${前の会話２} == ${今回会話} ]) ${ミミタコ反応} ${ミミタコチェック３})
ミミタコチェック３  : $(if $([ ${前の会話３} == ${今回会話} ]) ${ミミタコ反応} ${前の会話記憶})
前の会話記憶        : $(set 前の会話３ ${前の会話２}; set 前の会話２ ${前の会話１}; set 前の会話１ ${今回会話})


#-----------------------------------------------------------------------------
# 色々教えて
教えてモード : 通常
教えて準備 :$(set 覚えモード "通常" )
system.OnTeach : $(entry "覚え."${覚えモード} $(NULL))\e
覚え.通常 : ${h6}‥‥\w8\w8ぐう。${u0}寝てんじゃねえよ。
覚え.通常 : ${h0}‥‥\w8\w8当方ではそのような情報は受け付けておりません。${u0}素直に未対応って言え。

#-----------------------------------------------------------------------------
# 名作劇場制御
名作劇場ロード : 0

名作劇場 : ${名作劇場読み込み}${名作未再生分追加}${名作再生残チェック}${名作再生}${名作再生済削除}\e

# 名作データ、及び再生管理データを読み込み
名作劇場読み込み : $(if $([ ${名作劇場ロード} = 0 ]) $(load SakuraTheater01.txt ;load SakuraTheaterCtl.txt ;set 名作劇場ロード 1) )

# 名作データに追加があった場合の処理
名作未再生分追加 : $(if $([ $(expr ${名作作品数} > ${名作再生管理数} ) = 1 ]) $( set temp ${名作再生管理数}; inc temp ; while $([ $(expr ${temp} <= ${名作作品数} ) = 1 ]) $( adddict 名作再生残 ${temp} ; inc temp ) ; set 名作再生管理数 ${名作作品数} ) )

# 再生残が０の時の処理
名作再生残チェック : $(if $([ $(size 名作再生残) = 0 ]) ${名作劇場リセット} )

# 再生する名作データの呼び出し
名作再生 : $(set temp ${名作再生残})\0\s[6]\n\n作品№${temp}　\w9$(entry "名作."${temp} )\0\w9\w9\w9\_q\n\n[half]　　　　　　　　　　　　　　($(expr $(size 名作再生残 ) - 1 )/${名作作品数} えんいー)\_q\w9

# 呼び出した名作データをエントリから削除
名作再生済削除 : $(clear temp1 ; foreach temp2 名作再生残 $(adddict temp1 ${temp2} ) ; clear 名作再生残 ; foreach temp2 temp1 $( if $([ ${temp2} != ${temp} ]) $(adddict 名作再生残 ${temp2} ) ) )


# 名作再生残をセットしなおす
名作劇場リセット : $(clear 名作再生残 ; set 名作再生管理数 0 )${名作未再生分追加}\0\n\n[half]\s[5]シャッフルするよーー、‥‥\w8\w8っと、\w6終了！\w8\w8


名作劇場記憶箱保管 : $(if $([ ${名作劇場ロード} != 0 ]) ${名作劇場記憶箱保管本体} )
名作劇場記憶箱保管本体 : $(set 名作再生残数 $(size 名作再生残 ) ; save SakuraTheaterCtl.txt 名作再生残 名作再生管理数 名作再生残数)

#-----------------------------------------------------------------------------
