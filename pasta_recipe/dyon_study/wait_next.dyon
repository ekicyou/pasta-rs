/*
This example shows how to process data chunkwise by reading
at slower intervals.
*/

fn main() {
    // Create a log receiver channel.
    log := in log
    // Create a new thread that works on the task.
    th := go run()
    loop {
		w := wait_next(log)
		if w == none() {
			println("not wait!!")
			break
		}
		u := unwrap(w)
		x := pop(mut u)
		println(x)
		if x == none() {break}
	}
    // Wait for the thread to finish.
    _ := join(thread: th)
}

fn log(x: opt[f64]) {}

// Runs task.
fn run() -> bool {
    for i 100 {
        log(some(i))
        sleep(0.1)
    }
    log(none())
    return true
}